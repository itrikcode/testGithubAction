name: project cicd flow

on:
  push:
    branches: "release/**"
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '21'
          distribution: 'adopt'
          cache: maven
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: Build with Maven
        run: mvn clean install
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: vk786/test-app-my
          tags: v1-${{ env.TAG }}
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.USER_NAME }}
          password: ${{ secrets.USER_PASSWORD }}
#      - name: docker tag
#        run: |
#          docker tag vk786/test-app-my vk786/test-app-my:${{ steps.get-id.outputs.id }}
      - name: Run docker container
        run: docker run -d -p 8080:8080 vk786/test-app-my:${{ steps.get-id.outputs.id }}
       # run: docker run -d -p 8080:8080 vk786/test-app-my:v1
      - name: wait for docker container to start
        run: sleep 20
#      - name: install newman
#        run:  npm install -g newman
#      - name: set env test
#        run: newman run api-env.json
#      - name: run postman collection
#        run: newman run my-test.json
      - name: newman action
        continue-on-error: true
        uses: matt-ball/newman-action@master
        with:
            collection: my-test.json
            environment: api-env.json
